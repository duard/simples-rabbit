version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '15699:15672'
      - '5699:5672'
    networks:
      - simples
    env_file:
      - ./producer-one/.development.env
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  consumer-one:
    container_name: consumer-one
    # image: api-rabbit:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./consumer-one/Dockerfile
    depends_on:
      - rabbitmq
    ports:
      - '3000:3000'
    env_file: ./consumer-one/.development.env
    command: npm run start:dev
    networks:
      - simples
    volumes:
      # - .:/usr/src/consumer-one/
      - consumer_one:/usr/src/consumer-one/
      - node_modules:/usr/src/node_modules/
    restart: unless-stopped

  producer-one:
    container_name: producer-one
    # image: api-rabbit:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./producer-one/Dockerfile
    depends_on:
      - rabbitmq
    ports:
      - '5000:5000'
    env_file: ./producer-one/.development.env
    command: npm run start:dev
    networks:
      - simples
    volumes:
      # - .:/usr/src/producer-one/
      - producer_one:/usr/src/producer-one/
      - node_modules:/usr/src/node_modules/
    restart: unless-stopped

volumes:
  pgadmin_data:
  mongodb_data:
  producer_one:
  consumer_one:
  node_modules:

networks:
  simples:
    driver: bridge
    ipam:
      driver: default
